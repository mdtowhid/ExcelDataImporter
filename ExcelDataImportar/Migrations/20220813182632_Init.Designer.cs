// <auto-generated />
using System;
using ExcelDataImportar.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExcelDataImportar.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220813182632_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ExcelDataImportar.Models.AuditData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Col1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Col9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExcelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuditData");
                });

            modelBuilder.Entity("ExcelDataImportar.Models.AuditMasterData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ExcelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ExcelMasterDatas");
                });

            modelBuilder.Entity("ExcelDataImportar.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ExcelDataImportar.Models.UserInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserInformation");
                });

            modelBuilder.Entity("ExcelDataImportar.Models.AuditData", b =>
                {
                    b.HasOne("ExcelDataImportar.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExcelDataImportar.Models.AuditMasterData", b =>
                {
                    b.HasOne("ExcelDataImportar.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExcelDataImportar.Models.UserInformation", b =>
                {
                    b.HasOne("ExcelDataImportar.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
